import logging
from pymongo import MongoClient
from typing import Optional


logger = logging.getLogger(__name__)


class MongoManagerSync:
    def __init__(self, mongo_url: str, db_name: str, max_pool_size: int = 100):
        self._mongo_url = mongo_url
        self._db_name = db_name
        self._max_pool_size = max_pool_size
        self._client: Optional[MongoClient] = None
        self._db = None

    def connect(self) -> None:
        if self._client is None:
            self._client = MongoClient(
                self._mongo_url,
                maxPoolSize=self._max_pool_size,
                serverSelectionTimeoutMS=5000,  # —Ç–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è 5 —Å–µ–∫
                connect=False,
            )
            self._db = self._client[self._db_name]
            try:
                self._db.command("ping")
                logger.info(f"‚úÖ MongoDB connected to {self._db_name} (sync)")
            except Exception as e:
                self.close()
                logger.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Mongo")
                raise ConnectionError(f"MongoDB connection failed: {e}")

    def close(self) -> None:
        if self._client:
            self._client.close()
            self._client = None
            self._db = None
            logger.info("üö™ MongoDB connection closed (sync)")

    def get_mongodb(self) -> MongoClient:
        if self._db is None:
            logger.info("–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π Mongo (connect=False), –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è")
            self.connect()
        return self._db
